{"version":3,"file":"static/js/216.2fb90f83.chunk.js","mappings":"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","sources":["components/Movies/MoviesList.jsx","components/common/Section/Section.jsx","pages/Movies/SearchMovies.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport {\n  GlobalStyledH2,\n  GlobalStyledImage,\n  GlobalStyledLink,\n} from 'styles/GlobalStyle';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <StyledList>\n      {movies.map(({ id, poster_path, title }) => (\n        <StyledItem key={id}>\n          <GlobalStyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <ImageWrapper>\n              <StyledImage\n                $marginBottom=\"3px\"\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"\"\n              />\n            </ImageWrapper>\n            <StyledTitle $fontSize=\"15px\">{title}</StyledTitle>\n          </GlobalStyledLink>\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport const StyledTitle = styled(GlobalStyledH2)`\n  text-align: left;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const StyledItem = styled.li`\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 30px) / 3);\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 45px) / 4);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  margin-bottom: 5px;\n  overflow: hidden;\n  border-radius: 3px;\n`;\n\nexport const StyledImage = styled(GlobalStyledImage)`\n  transform: scale(1.03);\n  transition: transform 0.5s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <StyledSectionTitle>{title ? title : null}</StyledSectionTitle>\n      {children}\n    </StyledSection>\n  );\n};\n\nexport const StyledSection = styled.section``;\n\nexport const StyledSectionTitle = styled.h1`\n  margin-bottom: ${props => props.$marginBottom || '20px'};\n  font-size: ${props => props.$fontSize || '22px'};\n  font-weight: 600;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.$secondaryTextColor};\n`;\n","import { MoviesList } from 'components/Movies/MoviesList';\nimport { Section } from 'components/common/Section/Section';\n\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/Movies/movies-api-services';\nimport { styled } from 'styled-components';\nimport { GlobalStyledContainer, GlobalStyledInput } from 'styles/GlobalStyle';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [value, setValue] = useState(query);\n\n  useEffect(() => {\n    // if (!query) {\n    //   return;\n    // }\n\n    async function fetchMovieByName() {\n      try {\n        const data = await getMovieByName(value);\n        setMovies(data);\n      } catch (error) {\n        console.warn(error.message);\n      }\n    }\n\n    fetchMovieByName();\n  }, [query, value]);\n\n  const handleSearch = event => {\n    event.preventDefault();\n    setSearchParams(value ? { query: value } : {});\n  };\n\n  return (\n    <Section title=\"Search Movies\">\n      <GlobalStyledContainer>\n        <StyledForm onSubmit={handleSearch}>\n          <GlobalStyledInput\n            type=\"text\"\n            value={value}\n            onChange={event => {\n              setValue(event.target.value);\n            }}\n            placeholder=\"Enter movie name...\"\n          />\n        </StyledForm>\n\n        <MoviesList movies={movies} />\n      </GlobalStyledContainer>\n    </Section>\n  );\n};\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default SearchMovies;\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","StyledList","children","map","_ref2","id","poster_path","title","StyledItem","_jsxs","GlobalStyledLink","to","concat","state","from","ImageWrapper","StyledImage","$marginBottom","src","alt","StyledTitle","$fontSize","styled","GlobalStyledH2","_templateObject","_taggedTemplateLiteral","ul","_templateObject2","li","_templateObject3","div","_templateObject4","GlobalStyledImage","_templateObject5","Section","StyledSection","StyledSectionTitle","section","h1","props","theme","colors","$secondaryTextColor","StyledForm","form","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useState3","_useState4","value","setValue","useEffect","_fetchMovieByName","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMovieByName","sent","t0","console","warn","message","stop","apply","arguments","fetchMovieByName","GlobalStyledContainer","onSubmit","event","preventDefault","GlobalStyledInput","type","onChange","target","placeholder"],"sourceRoot":""}