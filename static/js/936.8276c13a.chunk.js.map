{"version":3,"file":"static/js/936.8276c13a.chunk.js","mappings":"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","sources":["components/Movies/MoviesList.jsx","components/common/Section/Section.jsx","pages/Movies/TopMovies.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport {\n  GlobalStyledH2,\n  GlobalStyledImage,\n  GlobalStyledLink,\n} from 'styles/GlobalStyle';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <StyledList>\n      {movies.map(({ id, poster_path, title }) => (\n        <StyledItem key={id}>\n          <GlobalStyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <ImageWrapper>\n              <StyledImage\n                $marginBottom=\"3px\"\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"\"\n              />\n            </ImageWrapper>\n            <StyledTitle $fontSize=\"15px\">{title}</StyledTitle>\n          </GlobalStyledLink>\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport const StyledTitle = styled(GlobalStyledH2)`\n  text-align: left;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const StyledItem = styled.li`\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 30px) / 3);\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: calc((100% - 45px) / 4);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  margin-bottom: 5px;\n  overflow: hidden;\n  border-radius: 3px;\n`;\n\nexport const StyledImage = styled(GlobalStyledImage)`\n  transform: scale(1.03);\n  transition: transform 0.5s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <StyledSectionTitle>{title ? title : null}</StyledSectionTitle>\n      {children}\n    </StyledSection>\n  );\n};\n\nexport const StyledSection = styled.section``;\n\nexport const StyledSectionTitle = styled.h1`\n  margin-bottom: ${props => props.$marginBottom || '20px'};\n  font-size: ${props => props.$fontSize || '22px'};\n  font-weight: 600;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.$secondaryTextColor};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../../services/Movies/movies-api-services';\n\nimport { GlobalStyledContainer } from 'styles/GlobalStyle';\nimport { MoviesList } from 'components/Movies/MoviesList';\nimport { Section } from 'components/common/Section/Section';\n\nconst TopMovies = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchTrendingMovies() {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        console.warn(error.message);\n      }\n    }\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <Section title=\"Trending movies\">\n      <GlobalStyledContainer>\n        <MoviesList movies={movies} />\n      </GlobalStyledContainer>\n    </Section>\n  );\n};\n\nexport default TopMovies;\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","StyledList","children","map","_ref2","id","poster_path","title","StyledItem","_jsxs","GlobalStyledLink","to","concat","state","from","ImageWrapper","StyledImage","$marginBottom","src","alt","StyledTitle","$fontSize","styled","GlobalStyledH2","_templateObject","_taggedTemplateLiteral","ul","_templateObject2","li","_templateObject3","div","_templateObject4","GlobalStyledImage","_templateObject5","Section","StyledSection","StyledSectionTitle","section","h1","props","theme","colors","$secondaryTextColor","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","_fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getTrendingMovies","sent","t0","console","warn","message","stop","apply","arguments","fetchTrendingMovies","GlobalStyledContainer"],"sourceRoot":""}