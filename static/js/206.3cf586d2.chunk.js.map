{"version":3,"file":"static/js/206.3cf586d2.chunk.js","mappings":"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","sources":["components/common/Section/Section.jsx","pages/Movies/MovieDetails/MovieDetails.styled.js","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <StyledSectionTitle>{title ? title : null}</StyledSectionTitle>\n      {children}\n    </StyledSection>\n  );\n};\n\nexport const StyledSection = styled.section``;\n\nexport const StyledSectionTitle = styled.h1`\n  margin-bottom: ${props => props.$marginBottom || '20px'};\n  font-size: ${props => props.$fontSize || '22px'};\n  font-weight: 600;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.$secondaryTextColor};\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledCard = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 55%;\n  border-radius: ${props => props.theme.$borderRadius};\n  overflow: hidden;\n`;\n\nexport const StyledInner = styled.div`\n  width: 45%;\n`;\n\nexport const StyledCardTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const StyledCardDescription = styled.p`\n  margin-bottom: 7px;\n`;\n\nexport const StyledInfoList = styled.ul`\n  display: flex;\n\n  gap: 35px;\n  margin: 20px 0;\n`;\n\nexport const StyledInfoItem = styled.li`\n  font-size: 17px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 80px;\n  padding: 8px 8px;\n  border-radius: ${props => props.theme.$borderRadius};\n  text-decoration: none;\n  color: black;\n  background-color: lightblue;\n\n  &.active {\n    color: white;\n    background-color: ${props => props.theme.colors.$accentColor};\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../../services/Movies/movies-api-services';\nimport {\n  GlobalStyledButton,\n  GlobalStyledContainer,\n} from '../../../styles/GlobalStyle';\nimport {\n  StyledCard,\n  StyledCardDescription,\n  StyledCardTitle,\n  StyledImage,\n  StyledInfoItem,\n  StyledInfoList,\n  StyledInner,\n  StyledNavLink,\n} from './MovieDetails.styled';\nimport { Section } from 'components/common/Section/Section';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(error => {\n        console.warn(error.message);\n      });\n  }, [movieId]);\n\n  const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n  const backLink = useRef(location.state?.from ?? '/');\n\n  return (\n    <Section title={movie.title}>\n      <GlobalStyledContainer>\n        <GlobalStyledButton\n          $padding=\"7px 10px\"\n          $margin=\"0 0 15px 0\"\n          onClick={() => navigate(backLink.current)}\n        >\n          Go back\n        </GlobalStyledButton>\n        {/* <Link to={backLink}>Go back</Link> */}\n\n        <StyledCard>\n          <StyledImage src={imageUrl} alt=\"\" />\n          <StyledInner>\n            <StyledCardTitle>Overview</StyledCardTitle>\n            <StyledCardDescription>{movie.overview}</StyledCardDescription>\n            <StyledCardTitle>Genres</StyledCardTitle>\n            <StyledCardDescription>\n              {movie.genres\n                ? movie.genres.map(item => item.name).join(', ')\n                : ''}\n            </StyledCardDescription>\n          </StyledInner>\n        </StyledCard>\n\n        <hr />\n\n        <StyledCardTitle>Additional information</StyledCardTitle>\n        <StyledInfoList>\n          <StyledInfoItem>\n            <StyledNavLink to={'cast'}>Cast</StyledNavLink>\n          </StyledInfoItem>\n          <StyledInfoItem>\n            <StyledNavLink to={'reviews'}>Reviews</StyledNavLink>\n          </StyledInfoItem>\n        </StyledInfoList>\n\n        <Outlet />\n      </GlobalStyledContainer>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Section","_ref","title","children","_jsxs","StyledSection","_jsx","StyledSectionTitle","styled","section","_templateObject","_taggedTemplateLiteral","h1","_templateObject2","props","$marginBottom","$fontSize","_ref2","theme","colors","$secondaryTextColor","StyledCard","div","StyledImage","img","$borderRadius","StyledInner","_templateObject3","StyledCardTitle","h2","_templateObject4","StyledCardDescription","p","_templateObject5","StyledInfoList","ul","_templateObject6","StyledInfoItem","li","_templateObject7","StyledNavLink","NavLink","_templateObject8","$accentColor","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","navigate","useNavigate","location","useLocation","movieId","useParams","useEffect","getMovieDetails","then","data","catch","error","console","warn","message","imageUrl","concat","poster_path","backLink","useRef","state","from","GlobalStyledContainer","GlobalStyledButton","$padding","$margin","onClick","current","src","alt","overview","genres","map","item","name","join","to","Outlet"],"sourceRoot":""}